{"id":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","dependencies":[{"name":"H:\\share\\three.js全套系列课程\\代码\\14-效果合成\\package.json","includedInParent":true,"mtime":1647451836746},{"name":"H:\\share\\three.js全套系列课程\\代码\\14-效果合成\\node_modules\\three\\examples\\jsm\\package.json","includedInParent":true,"mtime":1647452353659},{"name":"three","loc":{"line":3,"column":7,"index":25},"parent":"H:\\share\\three.js全套系列课程\\代码\\14-效果合成\\node_modules\\three\\examples\\jsm\\shaders\\SMAAShader.js","resolved":"H:\\share\\three.js全套系列课程\\代码\\14-效果合成\\node_modules\\three\\build\\three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SMAAWeightsShader = exports.SMAAEdgesShader = exports.SMAABlendShader = void 0;\n\nvar _three = require(\"three\");\n\n/**\n * WebGL port of Subpixel Morphological Antialiasing (SMAA) v2.8\n * Preset: SMAA 1x Medium (with color edge detection)\n * https://github.com/iryoku/smaa/releases/tag/v2.8\n */\nconst SMAAEdgesShader = {\n  defines: {\n    'SMAA_THRESHOLD': '0.1'\n  },\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'resolution': {\n      value: new _three.Vector2(1 / 1024, 1 / 512)\n    }\n  },\n  vertexShader:\n  /* glsl */\n  `\n\n\t\tuniform vec2 resolution;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vOffset[ 3 ];\n\n\t\tvoid SMAAEdgeDetectionVS( vec2 texcoord ) {\n\t\t\tvOffset[ 0 ] = texcoord.xyxy + resolution.xyxy * vec4( -1.0, 0.0, 0.0,  1.0 ); // WebGL port note: Changed sign in W component\n\t\t\tvOffset[ 1 ] = texcoord.xyxy + resolution.xyxy * vec4(  1.0, 0.0, 0.0, -1.0 ); // WebGL port note: Changed sign in W component\n\t\t\tvOffset[ 2 ] = texcoord.xyxy + resolution.xyxy * vec4( -2.0, 0.0, 0.0,  2.0 ); // WebGL port note: Changed sign in W component\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tSMAAEdgeDetectionVS( vUv );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n  fragmentShader:\n  /* glsl */\n  `\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vOffset[ 3 ];\n\n\t\tvec4 SMAAColorEdgeDetectionPS( vec2 texcoord, vec4 offset[3], sampler2D colorTex ) {\n\t\t\tvec2 threshold = vec2( SMAA_THRESHOLD, SMAA_THRESHOLD );\n\n\t\t\t// Calculate color deltas:\n\t\t\tvec4 delta;\n\t\t\tvec3 C = texture2D( colorTex, texcoord ).rgb;\n\n\t\t\tvec3 Cleft = texture2D( colorTex, offset[0].xy ).rgb;\n\t\t\tvec3 t = abs( C - Cleft );\n\t\t\tdelta.x = max( max( t.r, t.g ), t.b );\n\n\t\t\tvec3 Ctop = texture2D( colorTex, offset[0].zw ).rgb;\n\t\t\tt = abs( C - Ctop );\n\t\t\tdelta.y = max( max( t.r, t.g ), t.b );\n\n\t\t\t// We do the usual threshold:\n\t\t\tvec2 edges = step( threshold, delta.xy );\n\n\t\t\t// Then discard if there is no edge:\n\t\t\tif ( dot( edges, vec2( 1.0, 1.0 ) ) == 0.0 )\n\t\t\t\tdiscard;\n\n\t\t\t// Calculate right and bottom deltas:\n\t\t\tvec3 Cright = texture2D( colorTex, offset[1].xy ).rgb;\n\t\t\tt = abs( C - Cright );\n\t\t\tdelta.z = max( max( t.r, t.g ), t.b );\n\n\t\t\tvec3 Cbottom  = texture2D( colorTex, offset[1].zw ).rgb;\n\t\t\tt = abs( C - Cbottom );\n\t\t\tdelta.w = max( max( t.r, t.g ), t.b );\n\n\t\t\t// Calculate the maximum delta in the direct neighborhood:\n\t\t\tfloat maxDelta = max( max( max( delta.x, delta.y ), delta.z ), delta.w );\n\n\t\t\t// Calculate left-left and top-top deltas:\n\t\t\tvec3 Cleftleft  = texture2D( colorTex, offset[2].xy ).rgb;\n\t\t\tt = abs( C - Cleftleft );\n\t\t\tdelta.z = max( max( t.r, t.g ), t.b );\n\n\t\t\tvec3 Ctoptop = texture2D( colorTex, offset[2].zw ).rgb;\n\t\t\tt = abs( C - Ctoptop );\n\t\t\tdelta.w = max( max( t.r, t.g ), t.b );\n\n\t\t\t// Calculate the final maximum delta:\n\t\t\tmaxDelta = max( max( maxDelta, delta.z ), delta.w );\n\n\t\t\t// Local contrast adaptation in action:\n\t\t\tedges.xy *= step( 0.5 * maxDelta, delta.xy );\n\n\t\t\treturn vec4( edges, 0.0, 0.0 );\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = SMAAColorEdgeDetectionPS( vUv, vOffset, tDiffuse );\n\n\t\t}`\n};\nexports.SMAAEdgesShader = SMAAEdgesShader;\nconst SMAAWeightsShader = {\n  defines: {\n    'SMAA_MAX_SEARCH_STEPS': '8',\n    'SMAA_AREATEX_MAX_DISTANCE': '16',\n    'SMAA_AREATEX_PIXEL_SIZE': '( 1.0 / vec2( 160.0, 560.0 ) )',\n    'SMAA_AREATEX_SUBTEX_SIZE': '( 1.0 / 7.0 )'\n  },\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'tArea': {\n      value: null\n    },\n    'tSearch': {\n      value: null\n    },\n    'resolution': {\n      value: new _three.Vector2(1 / 1024, 1 / 512)\n    }\n  },\n  vertexShader:\n  /* glsl */\n  `\n\n\t\tuniform vec2 resolution;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vOffset[ 3 ];\n\t\tvarying vec2 vPixcoord;\n\n\t\tvoid SMAABlendingWeightCalculationVS( vec2 texcoord ) {\n\t\t\tvPixcoord = texcoord / resolution;\n\n\t\t\t// We will use these offsets for the searches later on (see @PSEUDO_GATHER4):\n\t\t\tvOffset[ 0 ] = texcoord.xyxy + resolution.xyxy * vec4( -0.25, 0.125, 1.25, 0.125 ); // WebGL port note: Changed sign in Y and W components\n\t\t\tvOffset[ 1 ] = texcoord.xyxy + resolution.xyxy * vec4( -0.125, 0.25, -0.125, -1.25 ); // WebGL port note: Changed sign in Y and W components\n\n\t\t\t// And these for the searches, they indicate the ends of the loops:\n\t\t\tvOffset[ 2 ] = vec4( vOffset[ 0 ].xz, vOffset[ 1 ].yw ) + vec4( -2.0, 2.0, -2.0, 2.0 ) * resolution.xxyy * float( SMAA_MAX_SEARCH_STEPS );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tSMAABlendingWeightCalculationVS( vUv );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n  fragmentShader:\n  /* glsl */\n  `\n\n\t\t#define SMAASampleLevelZeroOffset( tex, coord, offset ) texture2D( tex, coord + float( offset ) * resolution, 0.0 )\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform sampler2D tArea;\n\t\tuniform sampler2D tSearch;\n\t\tuniform vec2 resolution;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vOffset[3];\n\t\tvarying vec2 vPixcoord;\n\n\t\t#if __VERSION__ == 100\n\t\tvec2 round( vec2 x ) {\n\t\t\treturn sign( x ) * floor( abs( x ) + 0.5 );\n\t\t}\n\t\t#endif\n\n\t\tfloat SMAASearchLength( sampler2D searchTex, vec2 e, float bias, float scale ) {\n\t\t\t// Not required if searchTex accesses are set to point:\n\t\t\t// float2 SEARCH_TEX_PIXEL_SIZE = 1.0 / float2(66.0, 33.0);\n\t\t\t// e = float2(bias, 0.0) + 0.5 * SEARCH_TEX_PIXEL_SIZE +\n\t\t\t//     e * float2(scale, 1.0) * float2(64.0, 32.0) * SEARCH_TEX_PIXEL_SIZE;\n\t\t\te.r = bias + e.r * scale;\n\t\t\treturn 255.0 * texture2D( searchTex, e, 0.0 ).r;\n\t\t}\n\n\t\tfloat SMAASearchXLeft( sampler2D edgesTex, sampler2D searchTex, vec2 texcoord, float end ) {\n\t\t\t/**\n\t\t\t\t* @PSEUDO_GATHER4\n\t\t\t\t* This texcoord has been offset by (-0.25, -0.125) in the vertex shader to\n\t\t\t\t* sample between edge, thus fetching four edges in a row.\n\t\t\t\t* Sampling with different offsets in each direction allows to disambiguate\n\t\t\t\t* which edges are active from the four fetched ones.\n\t\t\t\t*/\n\t\t\tvec2 e = vec2( 0.0, 1.0 );\n\n\t\t\tfor ( int i = 0; i < SMAA_MAX_SEARCH_STEPS; i ++ ) { // WebGL port note: Changed while to for\n\t\t\t\te = texture2D( edgesTex, texcoord, 0.0 ).rg;\n\t\t\t\ttexcoord -= vec2( 2.0, 0.0 ) * resolution;\n\t\t\t\tif ( ! ( texcoord.x > end && e.g > 0.8281 && e.r == 0.0 ) ) break;\n\t\t\t}\n\n\t\t\t// We correct the previous (-0.25, -0.125) offset we applied:\n\t\t\ttexcoord.x += 0.25 * resolution.x;\n\n\t\t\t// The searches are bias by 1, so adjust the coords accordingly:\n\t\t\ttexcoord.x += resolution.x;\n\n\t\t\t// Disambiguate the length added by the last step:\n\t\t\ttexcoord.x += 2.0 * resolution.x; // Undo last step\n\t\t\ttexcoord.x -= resolution.x * SMAASearchLength(searchTex, e, 0.0, 0.5);\n\n\t\t\treturn texcoord.x;\n\t\t}\n\n\t\tfloat SMAASearchXRight( sampler2D edgesTex, sampler2D searchTex, vec2 texcoord, float end ) {\n\t\t\tvec2 e = vec2( 0.0, 1.0 );\n\n\t\t\tfor ( int i = 0; i < SMAA_MAX_SEARCH_STEPS; i ++ ) { // WebGL port note: Changed while to for\n\t\t\t\te = texture2D( edgesTex, texcoord, 0.0 ).rg;\n\t\t\t\ttexcoord += vec2( 2.0, 0.0 ) * resolution;\n\t\t\t\tif ( ! ( texcoord.x < end && e.g > 0.8281 && e.r == 0.0 ) ) break;\n\t\t\t}\n\n\t\t\ttexcoord.x -= 0.25 * resolution.x;\n\t\t\ttexcoord.x -= resolution.x;\n\t\t\ttexcoord.x -= 2.0 * resolution.x;\n\t\t\ttexcoord.x += resolution.x * SMAASearchLength( searchTex, e, 0.5, 0.5 );\n\n\t\t\treturn texcoord.x;\n\t\t}\n\n\t\tfloat SMAASearchYUp( sampler2D edgesTex, sampler2D searchTex, vec2 texcoord, float end ) {\n\t\t\tvec2 e = vec2( 1.0, 0.0 );\n\n\t\t\tfor ( int i = 0; i < SMAA_MAX_SEARCH_STEPS; i ++ ) { // WebGL port note: Changed while to for\n\t\t\t\te = texture2D( edgesTex, texcoord, 0.0 ).rg;\n\t\t\t\ttexcoord += vec2( 0.0, 2.0 ) * resolution; // WebGL port note: Changed sign\n\t\t\t\tif ( ! ( texcoord.y > end && e.r > 0.8281 && e.g == 0.0 ) ) break;\n\t\t\t}\n\n\t\t\ttexcoord.y -= 0.25 * resolution.y; // WebGL port note: Changed sign\n\t\t\ttexcoord.y -= resolution.y; // WebGL port note: Changed sign\n\t\t\ttexcoord.y -= 2.0 * resolution.y; // WebGL port note: Changed sign\n\t\t\ttexcoord.y += resolution.y * SMAASearchLength( searchTex, e.gr, 0.0, 0.5 ); // WebGL port note: Changed sign\n\n\t\t\treturn texcoord.y;\n\t\t}\n\n\t\tfloat SMAASearchYDown( sampler2D edgesTex, sampler2D searchTex, vec2 texcoord, float end ) {\n\t\t\tvec2 e = vec2( 1.0, 0.0 );\n\n\t\t\tfor ( int i = 0; i < SMAA_MAX_SEARCH_STEPS; i ++ ) { // WebGL port note: Changed while to for\n\t\t\t\te = texture2D( edgesTex, texcoord, 0.0 ).rg;\n\t\t\t\ttexcoord -= vec2( 0.0, 2.0 ) * resolution; // WebGL port note: Changed sign\n\t\t\t\tif ( ! ( texcoord.y < end && e.r > 0.8281 && e.g == 0.0 ) ) break;\n\t\t\t}\n\n\t\t\ttexcoord.y += 0.25 * resolution.y; // WebGL port note: Changed sign\n\t\t\ttexcoord.y += resolution.y; // WebGL port note: Changed sign\n\t\t\ttexcoord.y += 2.0 * resolution.y; // WebGL port note: Changed sign\n\t\t\ttexcoord.y -= resolution.y * SMAASearchLength( searchTex, e.gr, 0.5, 0.5 ); // WebGL port note: Changed sign\n\n\t\t\treturn texcoord.y;\n\t\t}\n\n\t\tvec2 SMAAArea( sampler2D areaTex, vec2 dist, float e1, float e2, float offset ) {\n\t\t\t// Rounding prevents precision errors of bilinear filtering:\n\t\t\tvec2 texcoord = float( SMAA_AREATEX_MAX_DISTANCE ) * round( 4.0 * vec2( e1, e2 ) ) + dist;\n\n\t\t\t// We do a scale and bias for mapping to texel space:\n\t\t\ttexcoord = SMAA_AREATEX_PIXEL_SIZE * texcoord + ( 0.5 * SMAA_AREATEX_PIXEL_SIZE );\n\n\t\t\t// Move to proper place, according to the subpixel offset:\n\t\t\ttexcoord.y += SMAA_AREATEX_SUBTEX_SIZE * offset;\n\n\t\t\treturn texture2D( areaTex, texcoord, 0.0 ).rg;\n\t\t}\n\n\t\tvec4 SMAABlendingWeightCalculationPS( vec2 texcoord, vec2 pixcoord, vec4 offset[ 3 ], sampler2D edgesTex, sampler2D areaTex, sampler2D searchTex, ivec4 subsampleIndices ) {\n\t\t\tvec4 weights = vec4( 0.0, 0.0, 0.0, 0.0 );\n\n\t\t\tvec2 e = texture2D( edgesTex, texcoord ).rg;\n\n\t\t\tif ( e.g > 0.0 ) { // Edge at north\n\t\t\t\tvec2 d;\n\n\t\t\t\t// Find the distance to the left:\n\t\t\t\tvec2 coords;\n\t\t\t\tcoords.x = SMAASearchXLeft( edgesTex, searchTex, offset[ 0 ].xy, offset[ 2 ].x );\n\t\t\t\tcoords.y = offset[ 1 ].y; // offset[1].y = texcoord.y - 0.25 * resolution.y (@CROSSING_OFFSET)\n\t\t\t\td.x = coords.x;\n\n\t\t\t\t// Now fetch the left crossing edges, two at a time using bilinear\n\t\t\t\t// filtering. Sampling at -0.25 (see @CROSSING_OFFSET) enables to\n\t\t\t\t// discern what value each edge has:\n\t\t\t\tfloat e1 = texture2D( edgesTex, coords, 0.0 ).r;\n\n\t\t\t\t// Find the distance to the right:\n\t\t\t\tcoords.x = SMAASearchXRight( edgesTex, searchTex, offset[ 0 ].zw, offset[ 2 ].y );\n\t\t\t\td.y = coords.x;\n\n\t\t\t\t// We want the distances to be in pixel units (doing this here allow to\n\t\t\t\t// better interleave arithmetic and memory accesses):\n\t\t\t\td = d / resolution.x - pixcoord.x;\n\n\t\t\t\t// SMAAArea below needs a sqrt, as the areas texture is compressed\n\t\t\t\t// quadratically:\n\t\t\t\tvec2 sqrt_d = sqrt( abs( d ) );\n\n\t\t\t\t// Fetch the right crossing edges:\n\t\t\t\tcoords.y -= 1.0 * resolution.y; // WebGL port note: Added\n\t\t\t\tfloat e2 = SMAASampleLevelZeroOffset( edgesTex, coords, ivec2( 1, 0 ) ).r;\n\n\t\t\t\t// Ok, we know how this pattern looks like, now it is time for getting\n\t\t\t\t// the actual area:\n\t\t\t\tweights.rg = SMAAArea( areaTex, sqrt_d, e1, e2, float( subsampleIndices.y ) );\n\t\t\t}\n\n\t\t\tif ( e.r > 0.0 ) { // Edge at west\n\t\t\t\tvec2 d;\n\n\t\t\t\t// Find the distance to the top:\n\t\t\t\tvec2 coords;\n\n\t\t\t\tcoords.y = SMAASearchYUp( edgesTex, searchTex, offset[ 1 ].xy, offset[ 2 ].z );\n\t\t\t\tcoords.x = offset[ 0 ].x; // offset[1].x = texcoord.x - 0.25 * resolution.x;\n\t\t\t\td.x = coords.y;\n\n\t\t\t\t// Fetch the top crossing edges:\n\t\t\t\tfloat e1 = texture2D( edgesTex, coords, 0.0 ).g;\n\n\t\t\t\t// Find the distance to the bottom:\n\t\t\t\tcoords.y = SMAASearchYDown( edgesTex, searchTex, offset[ 1 ].zw, offset[ 2 ].w );\n\t\t\t\td.y = coords.y;\n\n\t\t\t\t// We want the distances to be in pixel units:\n\t\t\t\td = d / resolution.y - pixcoord.y;\n\n\t\t\t\t// SMAAArea below needs a sqrt, as the areas texture is compressed\n\t\t\t\t// quadratically:\n\t\t\t\tvec2 sqrt_d = sqrt( abs( d ) );\n\n\t\t\t\t// Fetch the bottom crossing edges:\n\t\t\t\tcoords.y -= 1.0 * resolution.y; // WebGL port note: Added\n\t\t\t\tfloat e2 = SMAASampleLevelZeroOffset( edgesTex, coords, ivec2( 0, 1 ) ).g;\n\n\t\t\t\t// Get the area for this direction:\n\t\t\t\tweights.ba = SMAAArea( areaTex, sqrt_d, e1, e2, float( subsampleIndices.x ) );\n\t\t\t}\n\n\t\t\treturn weights;\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = SMAABlendingWeightCalculationPS( vUv, vPixcoord, vOffset, tDiffuse, tArea, tSearch, ivec4( 0.0 ) );\n\n\t\t}`\n};\nexports.SMAAWeightsShader = SMAAWeightsShader;\nconst SMAABlendShader = {\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'tColor': {\n      value: null\n    },\n    'resolution': {\n      value: new _three.Vector2(1 / 1024, 1 / 512)\n    }\n  },\n  vertexShader:\n  /* glsl */\n  `\n\n\t\tuniform vec2 resolution;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vOffset[ 2 ];\n\n\t\tvoid SMAANeighborhoodBlendingVS( vec2 texcoord ) {\n\t\t\tvOffset[ 0 ] = texcoord.xyxy + resolution.xyxy * vec4( -1.0, 0.0, 0.0, 1.0 ); // WebGL port note: Changed sign in W component\n\t\t\tvOffset[ 1 ] = texcoord.xyxy + resolution.xyxy * vec4( 1.0, 0.0, 0.0, -1.0 ); // WebGL port note: Changed sign in W component\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tSMAANeighborhoodBlendingVS( vUv );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n  fragmentShader:\n  /* glsl */\n  `\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform sampler2D tColor;\n\t\tuniform vec2 resolution;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vOffset[ 2 ];\n\n\t\tvec4 SMAANeighborhoodBlendingPS( vec2 texcoord, vec4 offset[ 2 ], sampler2D colorTex, sampler2D blendTex ) {\n\t\t\t// Fetch the blending weights for current pixel:\n\t\t\tvec4 a;\n\t\t\ta.xz = texture2D( blendTex, texcoord ).xz;\n\t\t\ta.y = texture2D( blendTex, offset[ 1 ].zw ).g;\n\t\t\ta.w = texture2D( blendTex, offset[ 1 ].xy ).a;\n\n\t\t\t// Is there any blending weight with a value greater than 0.0?\n\t\t\tif ( dot(a, vec4( 1.0, 1.0, 1.0, 1.0 )) < 1e-5 ) {\n\t\t\t\treturn texture2D( colorTex, texcoord, 0.0 );\n\t\t\t} else {\n\t\t\t\t// Up to 4 lines can be crossing a pixel (one through each edge). We\n\t\t\t\t// favor blending by choosing the line with the maximum weight for each\n\t\t\t\t// direction:\n\t\t\t\tvec2 offset;\n\t\t\t\toffset.x = a.a > a.b ? a.a : -a.b; // left vs. right\n\t\t\t\toffset.y = a.g > a.r ? -a.g : a.r; // top vs. bottom // WebGL port note: Changed signs\n\n\t\t\t\t// Then we go in the direction that has the maximum weight:\n\t\t\t\tif ( abs( offset.x ) > abs( offset.y )) { // horizontal vs. vertical\n\t\t\t\t\toffset.y = 0.0;\n\t\t\t\t} else {\n\t\t\t\t\toffset.x = 0.0;\n\t\t\t\t}\n\n\t\t\t\t// Fetch the opposite color and lerp by hand:\n\t\t\t\tvec4 C = texture2D( colorTex, texcoord, 0.0 );\n\t\t\t\ttexcoord += sign( offset ) * resolution;\n\t\t\t\tvec4 Cop = texture2D( colorTex, texcoord, 0.0 );\n\t\t\t\tfloat s = abs( offset.x ) > abs( offset.y ) ? abs( offset.x ) : abs( offset.y );\n\n\t\t\t\t// WebGL port note: Added gamma correction\n\t\t\t\tC.xyz = pow(C.xyz, vec3(2.2));\n\t\t\t\tCop.xyz = pow(Cop.xyz, vec3(2.2));\n\t\t\t\tvec4 mixed = mix(C, Cop, s);\n\t\t\t\tmixed.xyz = pow(mixed.xyz, vec3(1.0 / 2.2));\n\n\t\t\t\treturn mixed;\n\t\t\t}\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = SMAANeighborhoodBlendingPS( vUv, vOffset, tColor, tDiffuse );\n\n\t\t}`\n};\nexports.SMAABlendShader = SMAABlendShader;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":5,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":6,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":7,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":9,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":11,"column":0}},{"name":"SMAAEdgesShader","generated":{"line":15,"column":6},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":11,"column":6}},{"generated":{"line":15,"column":21},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":11,"column":21}},{"generated":{"line":15,"column":24},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":11,"column":24}},{"name":"defines","generated":{"line":16,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":13,"column":1}},{"name":"defines","generated":{"line":16,"column":2},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":13,"column":1}},{"generated":{"line":16,"column":9},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":13,"column":8}},{"generated":{"line":16,"column":11},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":13,"column":10}},{"generated":{"line":17,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":15,"column":2}},{"generated":{"line":17,"column":22},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":15,"column":20}},{"generated":{"line":18,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":13,"column":10}},{"generated":{"line":18,"column":3},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":11,"column":24}},{"name":"uniforms","generated":{"line":19,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":19,"column":1}},{"name":"uniforms","generated":{"line":19,"column":2},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":19,"column":1}},{"generated":{"line":19,"column":10},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":19,"column":9}},{"generated":{"line":19,"column":12},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":19,"column":11}},{"generated":{"line":20,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":21,"column":2}},{"generated":{"line":20,"column":16},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":21,"column":14}},{"name":"value","generated":{"line":21,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":21,"column":16}},{"name":"value","generated":{"line":21,"column":6},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":21,"column":16}},{"generated":{"line":21,"column":11},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":21,"column":21}},{"generated":{"line":21,"column":13},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":21,"column":23}},{"generated":{"line":22,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":21,"column":14}},{"generated":{"line":22,"column":5},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":19,"column":11}},{"generated":{"line":23,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":2}},{"generated":{"line":23,"column":18},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":16}},{"name":"value","generated":{"line":24,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":18}},{"name":"value","generated":{"line":24,"column":6},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":18}},{"generated":{"line":24,"column":11},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":23}},{"generated":{"line":24,"column":13},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":25}},{"name":"Vector2","generated":{"line":24,"column":17},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":29}},{"generated":{"line":24,"column":31},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":25}},{"generated":{"line":24,"column":32},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":38}},{"generated":{"line":24,"column":36},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":42}},{"generated":{"line":24,"column":40},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":25}},{"generated":{"line":24,"column":42},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":48}},{"generated":{"line":24,"column":46},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":52}},{"generated":{"line":24,"column":49},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":25}},{"generated":{"line":25,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":22,"column":16}},{"generated":{"line":26,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":19,"column":11}},{"generated":{"line":26,"column":3},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":11,"column":24}},{"name":"vertexShader","generated":{"line":27,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":26,"column":1}},{"name":"vertexShader","generated":{"line":27,"column":2},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":26,"column":1}},{"generated":{"line":27,"column":14},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":26,"column":13}},{"generated":{"line":28,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":26,"column":15}},{"generated":{"line":29,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":26,"column":26}},{"generated":{"line":30,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":27,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":28,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":29,"column":0}},{"generated":{"line":33,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":30,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":31,"column":0}},{"generated":{"line":35,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":32,"column":0}},{"generated":{"line":36,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":33,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":34,"column":0}},{"generated":{"line":38,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":35,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":36,"column":0}},{"generated":{"line":40,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":37,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":38,"column":0}},{"generated":{"line":42,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":39,"column":0}},{"generated":{"line":43,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":40,"column":0}},{"generated":{"line":44,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":41,"column":0}},{"generated":{"line":45,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":42,"column":0}},{"generated":{"line":46,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":43,"column":0}},{"generated":{"line":47,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":44,"column":0}},{"generated":{"line":48,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":45,"column":0}},{"generated":{"line":49,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":46,"column":0}},{"generated":{"line":50,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":47,"column":0}},{"generated":{"line":50,"column":4},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":11,"column":24}},{"name":"fragmentShader","generated":{"line":51,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":49,"column":1}},{"name":"fragmentShader","generated":{"line":51,"column":2},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":49,"column":1}},{"generated":{"line":51,"column":16},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":49,"column":15}},{"generated":{"line":52,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":49,"column":17}},{"generated":{"line":53,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":49,"column":28}},{"generated":{"line":54,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":50,"column":0}},{"generated":{"line":55,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":51,"column":0}},{"generated":{"line":56,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":52,"column":0}},{"generated":{"line":57,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":53,"column":0}},{"generated":{"line":58,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":54,"column":0}},{"generated":{"line":59,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":55,"column":0}},{"generated":{"line":60,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":56,"column":0}},{"generated":{"line":61,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":57,"column":0}},{"generated":{"line":62,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":58,"column":0}},{"generated":{"line":63,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":59,"column":0}},{"generated":{"line":64,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":60,"column":0}},{"generated":{"line":65,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":61,"column":0}},{"generated":{"line":66,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":62,"column":0}},{"generated":{"line":67,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":63,"column":0}},{"generated":{"line":68,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":64,"column":0}},{"generated":{"line":69,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":65,"column":0}},{"generated":{"line":70,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":66,"column":0}},{"generated":{"line":71,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":67,"column":0}},{"generated":{"line":72,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":68,"column":0}},{"generated":{"line":73,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":69,"column":0}},{"generated":{"line":74,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":70,"column":0}},{"generated":{"line":75,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":71,"column":0}},{"generated":{"line":76,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":72,"column":0}},{"generated":{"line":77,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":73,"column":0}},{"generated":{"line":78,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":74,"column":0}},{"generated":{"line":79,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":75,"column":0}},{"generated":{"line":80,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":76,"column":0}},{"generated":{"line":81,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":77,"column":0}},{"generated":{"line":82,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":78,"column":0}},{"generated":{"line":83,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":79,"column":0}},{"generated":{"line":84,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":80,"column":0}},{"generated":{"line":85,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":81,"column":0}},{"generated":{"line":86,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":82,"column":0}},{"generated":{"line":87,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":83,"column":0}},{"generated":{"line":88,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":84,"column":0}},{"generated":{"line":89,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":85,"column":0}},{"generated":{"line":90,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":86,"column":0}},{"generated":{"line":91,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":87,"column":0}},{"generated":{"line":92,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":88,"column":0}},{"generated":{"line":93,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":89,"column":0}},{"generated":{"line":94,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":90,"column":0}},{"generated":{"line":95,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":91,"column":0}},{"generated":{"line":96,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":92,"column":0}},{"generated":{"line":97,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":93,"column":0}},{"generated":{"line":98,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":94,"column":0}},{"generated":{"line":99,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":95,"column":0}},{"generated":{"line":100,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":96,"column":0}},{"generated":{"line":101,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":97,"column":0}},{"generated":{"line":102,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":98,"column":0}},{"generated":{"line":103,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":99,"column":0}},{"generated":{"line":104,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":100,"column":0}},{"generated":{"line":105,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":101,"column":0}},{"generated":{"line":106,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":102,"column":0}},{"generated":{"line":107,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":103,"column":0}},{"generated":{"line":108,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":104,"column":0}},{"generated":{"line":109,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":105,"column":0}},{"generated":{"line":110,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":106,"column":0}},{"generated":{"line":111,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":107,"column":0}},{"generated":{"line":112,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":108,"column":0}},{"generated":{"line":113,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":109,"column":0}},{"generated":{"line":114,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":110,"column":0}},{"generated":{"line":115,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":111,"column":0}},{"generated":{"line":116,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":112,"column":0}},{"generated":{"line":117,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":11,"column":24}},{"generated":{"line":117,"column":1},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":11,"column":0}},{"generated":{"line":119,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":116,"column":0}},{"name":"SMAAWeightsShader","generated":{"line":119,"column":6},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":116,"column":6}},{"generated":{"line":119,"column":23},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":116,"column":23}},{"generated":{"line":119,"column":26},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":116,"column":26}},{"name":"defines","generated":{"line":120,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":118,"column":1}},{"name":"defines","generated":{"line":120,"column":2},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":118,"column":1}},{"generated":{"line":120,"column":9},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":118,"column":8}},{"generated":{"line":120,"column":11},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":118,"column":10}},{"generated":{"line":121,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":120,"column":2}},{"generated":{"line":121,"column":29},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":120,"column":27}},{"generated":{"line":121,"column":32},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":118,"column":10}},{"generated":{"line":122,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":121,"column":2}},{"generated":{"line":122,"column":33},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":121,"column":31}},{"generated":{"line":122,"column":37},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":118,"column":10}},{"generated":{"line":123,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":122,"column":2}},{"generated":{"line":123,"column":31},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":122,"column":29}},{"generated":{"line":123,"column":63},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":118,"column":10}},{"generated":{"line":124,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":123,"column":2}},{"generated":{"line":124,"column":32},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":123,"column":30}},{"generated":{"line":125,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":118,"column":10}},{"generated":{"line":125,"column":3},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":116,"column":26}},{"name":"uniforms","generated":{"line":126,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":127,"column":1}},{"name":"uniforms","generated":{"line":126,"column":2},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":127,"column":1}},{"generated":{"line":126,"column":10},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":127,"column":9}},{"generated":{"line":126,"column":12},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":127,"column":11}},{"generated":{"line":127,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":129,"column":2}},{"generated":{"line":127,"column":16},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":129,"column":14}},{"name":"value","generated":{"line":128,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":129,"column":16}},{"name":"value","generated":{"line":128,"column":6},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":129,"column":16}},{"generated":{"line":128,"column":11},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":129,"column":21}},{"generated":{"line":128,"column":13},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":129,"column":23}},{"generated":{"line":129,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":129,"column":14}},{"generated":{"line":129,"column":5},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":127,"column":11}},{"generated":{"line":130,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":130,"column":2}},{"generated":{"line":130,"column":13},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":130,"column":11}},{"name":"value","generated":{"line":131,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":130,"column":13}},{"name":"value","generated":{"line":131,"column":6},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":130,"column":13}},{"generated":{"line":131,"column":11},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":130,"column":18}},{"generated":{"line":131,"column":13},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":130,"column":20}},{"generated":{"line":132,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":130,"column":11}},{"generated":{"line":132,"column":5},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":127,"column":11}},{"generated":{"line":133,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":131,"column":2}},{"generated":{"line":133,"column":15},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":131,"column":13}},{"name":"value","generated":{"line":134,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":131,"column":15}},{"name":"value","generated":{"line":134,"column":6},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":131,"column":15}},{"generated":{"line":134,"column":11},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":131,"column":20}},{"generated":{"line":134,"column":13},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":131,"column":22}},{"generated":{"line":135,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":131,"column":13}},{"generated":{"line":135,"column":5},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":127,"column":11}},{"generated":{"line":136,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":2}},{"generated":{"line":136,"column":18},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":16}},{"name":"value","generated":{"line":137,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":18}},{"name":"value","generated":{"line":137,"column":6},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":18}},{"generated":{"line":137,"column":11},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":23}},{"generated":{"line":137,"column":13},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":25}},{"name":"Vector2","generated":{"line":137,"column":17},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":29}},{"generated":{"line":137,"column":31},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":25}},{"generated":{"line":137,"column":32},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":38}},{"generated":{"line":137,"column":36},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":42}},{"generated":{"line":137,"column":40},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":25}},{"generated":{"line":137,"column":42},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":48}},{"generated":{"line":137,"column":46},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":52}},{"generated":{"line":137,"column":49},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":25}},{"generated":{"line":138,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":132,"column":16}},{"generated":{"line":139,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":127,"column":11}},{"generated":{"line":139,"column":3},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":116,"column":26}},{"name":"vertexShader","generated":{"line":140,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":136,"column":1}},{"name":"vertexShader","generated":{"line":140,"column":2},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":136,"column":1}},{"generated":{"line":140,"column":14},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":136,"column":13}},{"generated":{"line":141,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":136,"column":15}},{"generated":{"line":142,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":136,"column":26}},{"generated":{"line":143,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":137,"column":0}},{"generated":{"line":144,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":138,"column":0}},{"generated":{"line":145,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":139,"column":0}},{"generated":{"line":146,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":140,"column":0}},{"generated":{"line":147,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":141,"column":0}},{"generated":{"line":148,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":142,"column":0}},{"generated":{"line":149,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":143,"column":0}},{"generated":{"line":150,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":144,"column":0}},{"generated":{"line":151,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":145,"column":0}},{"generated":{"line":152,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":146,"column":0}},{"generated":{"line":153,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":147,"column":0}},{"generated":{"line":154,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":148,"column":0}},{"generated":{"line":155,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":149,"column":0}},{"generated":{"line":156,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":150,"column":0}},{"generated":{"line":157,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":151,"column":0}},{"generated":{"line":158,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":152,"column":0}},{"generated":{"line":159,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":153,"column":0}},{"generated":{"line":160,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":154,"column":0}},{"generated":{"line":161,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":155,"column":0}},{"generated":{"line":162,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":156,"column":0}},{"generated":{"line":163,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":157,"column":0}},{"generated":{"line":164,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":158,"column":0}},{"generated":{"line":165,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":159,"column":0}},{"generated":{"line":166,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":160,"column":0}},{"generated":{"line":167,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":161,"column":0}},{"generated":{"line":168,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":162,"column":0}},{"generated":{"line":169,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":163,"column":0}},{"generated":{"line":170,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":164,"column":0}},{"generated":{"line":170,"column":4},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":116,"column":26}},{"name":"fragmentShader","generated":{"line":171,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":166,"column":1}},{"name":"fragmentShader","generated":{"line":171,"column":2},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":166,"column":1}},{"generated":{"line":171,"column":16},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":166,"column":15}},{"generated":{"line":172,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":166,"column":17}},{"generated":{"line":173,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":166,"column":28}},{"generated":{"line":174,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":167,"column":0}},{"generated":{"line":175,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":168,"column":0}},{"generated":{"line":176,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":169,"column":0}},{"generated":{"line":177,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":170,"column":0}},{"generated":{"line":178,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":171,"column":0}},{"generated":{"line":179,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":172,"column":0}},{"generated":{"line":180,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":173,"column":0}},{"generated":{"line":181,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":174,"column":0}},{"generated":{"line":182,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":175,"column":0}},{"generated":{"line":183,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":176,"column":0}},{"generated":{"line":184,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":177,"column":0}},{"generated":{"line":185,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":178,"column":0}},{"generated":{"line":186,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":179,"column":0}},{"generated":{"line":187,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":180,"column":0}},{"generated":{"line":188,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":181,"column":0}},{"generated":{"line":189,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":182,"column":0}},{"generated":{"line":190,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":183,"column":0}},{"generated":{"line":191,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":184,"column":0}},{"generated":{"line":192,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":185,"column":0}},{"generated":{"line":193,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":186,"column":0}},{"generated":{"line":194,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":187,"column":0}},{"generated":{"line":195,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":188,"column":0}},{"generated":{"line":196,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":189,"column":0}},{"generated":{"line":197,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":190,"column":0}},{"generated":{"line":198,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":191,"column":0}},{"generated":{"line":199,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":192,"column":0}},{"generated":{"line":200,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":193,"column":0}},{"generated":{"line":201,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":194,"column":0}},{"generated":{"line":202,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":195,"column":0}},{"generated":{"line":203,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":196,"column":0}},{"generated":{"line":204,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":197,"column":0}},{"generated":{"line":205,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":198,"column":0}},{"generated":{"line":206,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":199,"column":0}},{"generated":{"line":207,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":200,"column":0}},{"generated":{"line":208,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":201,"column":0}},{"generated":{"line":209,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":202,"column":0}},{"generated":{"line":210,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":203,"column":0}},{"generated":{"line":211,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":204,"column":0}},{"generated":{"line":212,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":205,"column":0}},{"generated":{"line":213,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":206,"column":0}},{"generated":{"line":214,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":207,"column":0}},{"generated":{"line":215,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":208,"column":0}},{"generated":{"line":216,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":209,"column":0}},{"generated":{"line":217,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":210,"column":0}},{"generated":{"line":218,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":211,"column":0}},{"generated":{"line":219,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":212,"column":0}},{"generated":{"line":220,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":213,"column":0}},{"generated":{"line":221,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":214,"column":0}},{"generated":{"line":222,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":215,"column":0}},{"generated":{"line":223,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":216,"column":0}},{"generated":{"line":224,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":217,"column":0}},{"generated":{"line":225,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":218,"column":0}},{"generated":{"line":226,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":219,"column":0}},{"generated":{"line":227,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":220,"column":0}},{"generated":{"line":228,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":221,"column":0}},{"generated":{"line":229,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":222,"column":0}},{"generated":{"line":230,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":223,"column":0}},{"generated":{"line":231,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":224,"column":0}},{"generated":{"line":232,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":225,"column":0}},{"generated":{"line":233,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":226,"column":0}},{"generated":{"line":234,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":227,"column":0}},{"generated":{"line":235,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":228,"column":0}},{"generated":{"line":236,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":229,"column":0}},{"generated":{"line":237,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":230,"column":0}},{"generated":{"line":238,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":231,"column":0}},{"generated":{"line":239,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":232,"column":0}},{"generated":{"line":240,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":233,"column":0}},{"generated":{"line":241,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":234,"column":0}},{"generated":{"line":242,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":235,"column":0}},{"generated":{"line":243,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":236,"column":0}},{"generated":{"line":244,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":237,"column":0}},{"generated":{"line":245,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":238,"column":0}},{"generated":{"line":246,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":239,"column":0}},{"generated":{"line":247,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":240,"column":0}},{"generated":{"line":248,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":241,"column":0}},{"generated":{"line":249,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":242,"column":0}},{"generated":{"line":250,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":243,"column":0}},{"generated":{"line":251,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":244,"column":0}},{"generated":{"line":252,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":245,"column":0}},{"generated":{"line":253,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":246,"column":0}},{"generated":{"line":254,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":247,"column":0}},{"generated":{"line":255,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":248,"column":0}},{"generated":{"line":256,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":249,"column":0}},{"generated":{"line":257,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":250,"column":0}},{"generated":{"line":258,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":251,"column":0}},{"generated":{"line":259,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":252,"column":0}},{"generated":{"line":260,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":253,"column":0}},{"generated":{"line":261,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":254,"column":0}},{"generated":{"line":262,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":255,"column":0}},{"generated":{"line":263,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":256,"column":0}},{"generated":{"line":264,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":257,"column":0}},{"generated":{"line":265,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":258,"column":0}},{"generated":{"line":266,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":259,"column":0}},{"generated":{"line":267,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":260,"column":0}},{"generated":{"line":268,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":261,"column":0}},{"generated":{"line":269,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":262,"column":0}},{"generated":{"line":270,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":263,"column":0}},{"generated":{"line":271,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":264,"column":0}},{"generated":{"line":272,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":265,"column":0}},{"generated":{"line":273,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":266,"column":0}},{"generated":{"line":274,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":267,"column":0}},{"generated":{"line":275,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":268,"column":0}},{"generated":{"line":276,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":269,"column":0}},{"generated":{"line":277,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":270,"column":0}},{"generated":{"line":278,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":271,"column":0}},{"generated":{"line":279,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":272,"column":0}},{"generated":{"line":280,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":273,"column":0}},{"generated":{"line":281,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":274,"column":0}},{"generated":{"line":282,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":275,"column":0}},{"generated":{"line":283,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":276,"column":0}},{"generated":{"line":284,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":277,"column":0}},{"generated":{"line":285,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":278,"column":0}},{"generated":{"line":286,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":279,"column":0}},{"generated":{"line":287,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":280,"column":0}},{"generated":{"line":288,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":281,"column":0}},{"generated":{"line":289,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":282,"column":0}},{"generated":{"line":290,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":283,"column":0}},{"generated":{"line":291,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":284,"column":0}},{"generated":{"line":292,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":285,"column":0}},{"generated":{"line":293,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":286,"column":0}},{"generated":{"line":294,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":287,"column":0}},{"generated":{"line":295,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":288,"column":0}},{"generated":{"line":296,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":289,"column":0}},{"generated":{"line":297,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":290,"column":0}},{"generated":{"line":298,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":291,"column":0}},{"generated":{"line":299,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":292,"column":0}},{"generated":{"line":300,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":293,"column":0}},{"generated":{"line":301,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":294,"column":0}},{"generated":{"line":302,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":295,"column":0}},{"generated":{"line":303,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":296,"column":0}},{"generated":{"line":304,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":297,"column":0}},{"generated":{"line":305,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":298,"column":0}},{"generated":{"line":306,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":299,"column":0}},{"generated":{"line":307,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":300,"column":0}},{"generated":{"line":308,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":301,"column":0}},{"generated":{"line":309,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":302,"column":0}},{"generated":{"line":310,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":303,"column":0}},{"generated":{"line":311,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":304,"column":0}},{"generated":{"line":312,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":305,"column":0}},{"generated":{"line":313,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":306,"column":0}},{"generated":{"line":314,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":307,"column":0}},{"generated":{"line":315,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":308,"column":0}},{"generated":{"line":316,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":309,"column":0}},{"generated":{"line":317,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":310,"column":0}},{"generated":{"line":318,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":311,"column":0}},{"generated":{"line":319,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":312,"column":0}},{"generated":{"line":320,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":313,"column":0}},{"generated":{"line":321,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":314,"column":0}},{"generated":{"line":322,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":315,"column":0}},{"generated":{"line":323,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":316,"column":0}},{"generated":{"line":324,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":317,"column":0}},{"generated":{"line":325,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":318,"column":0}},{"generated":{"line":326,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":319,"column":0}},{"generated":{"line":327,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":320,"column":0}},{"generated":{"line":328,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":321,"column":0}},{"generated":{"line":329,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":322,"column":0}},{"generated":{"line":330,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":323,"column":0}},{"generated":{"line":331,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":324,"column":0}},{"generated":{"line":332,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":325,"column":0}},{"generated":{"line":333,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":326,"column":0}},{"generated":{"line":334,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":327,"column":0}},{"generated":{"line":335,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":328,"column":0}},{"generated":{"line":336,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":329,"column":0}},{"generated":{"line":337,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":330,"column":0}},{"generated":{"line":338,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":331,"column":0}},{"generated":{"line":339,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":332,"column":0}},{"generated":{"line":340,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":333,"column":0}},{"generated":{"line":341,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":334,"column":0}},{"generated":{"line":342,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":335,"column":0}},{"generated":{"line":343,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":336,"column":0}},{"generated":{"line":344,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":337,"column":0}},{"generated":{"line":345,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":338,"column":0}},{"generated":{"line":346,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":339,"column":0}},{"generated":{"line":347,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":340,"column":0}},{"generated":{"line":348,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":341,"column":0}},{"generated":{"line":349,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":342,"column":0}},{"generated":{"line":350,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":343,"column":0}},{"generated":{"line":351,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":344,"column":0}},{"generated":{"line":352,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":345,"column":0}},{"generated":{"line":353,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":346,"column":0}},{"generated":{"line":354,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":347,"column":0}},{"generated":{"line":355,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":348,"column":0}},{"generated":{"line":356,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":349,"column":0}},{"generated":{"line":357,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":350,"column":0}},{"generated":{"line":358,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":351,"column":0}},{"generated":{"line":359,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":352,"column":0}},{"generated":{"line":360,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":353,"column":0}},{"generated":{"line":361,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":354,"column":0}},{"generated":{"line":362,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":355,"column":0}},{"generated":{"line":363,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":356,"column":0}},{"generated":{"line":364,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":357,"column":0}},{"generated":{"line":365,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":358,"column":0}},{"generated":{"line":366,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":359,"column":0}},{"generated":{"line":367,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":360,"column":0}},{"generated":{"line":368,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":361,"column":0}},{"generated":{"line":369,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":362,"column":0}},{"generated":{"line":370,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":363,"column":0}},{"generated":{"line":371,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":364,"column":0}},{"generated":{"line":372,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":365,"column":0}},{"generated":{"line":373,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":366,"column":0}},{"generated":{"line":374,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":116,"column":26}},{"generated":{"line":374,"column":1},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":116,"column":0}},{"generated":{"line":376,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":370,"column":0}},{"name":"SMAABlendShader","generated":{"line":376,"column":6},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":370,"column":6}},{"generated":{"line":376,"column":21},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":370,"column":21}},{"generated":{"line":376,"column":24},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":370,"column":24}},{"name":"uniforms","generated":{"line":377,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":372,"column":1}},{"name":"uniforms","generated":{"line":377,"column":2},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":372,"column":1}},{"generated":{"line":377,"column":10},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":372,"column":9}},{"generated":{"line":377,"column":12},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":372,"column":11}},{"generated":{"line":378,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":374,"column":2}},{"generated":{"line":378,"column":16},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":374,"column":14}},{"name":"value","generated":{"line":379,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":374,"column":16}},{"name":"value","generated":{"line":379,"column":6},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":374,"column":16}},{"generated":{"line":379,"column":11},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":374,"column":21}},{"generated":{"line":379,"column":13},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":374,"column":23}},{"generated":{"line":380,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":374,"column":14}},{"generated":{"line":380,"column":5},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":372,"column":11}},{"generated":{"line":381,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":375,"column":2}},{"generated":{"line":381,"column":14},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":375,"column":12}},{"name":"value","generated":{"line":382,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":375,"column":14}},{"name":"value","generated":{"line":382,"column":6},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":375,"column":14}},{"generated":{"line":382,"column":11},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":375,"column":19}},{"generated":{"line":382,"column":13},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":375,"column":21}},{"generated":{"line":383,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":375,"column":12}},{"generated":{"line":383,"column":5},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":372,"column":11}},{"generated":{"line":384,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":2}},{"generated":{"line":384,"column":18},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":16}},{"name":"value","generated":{"line":385,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":18}},{"name":"value","generated":{"line":385,"column":6},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":18}},{"generated":{"line":385,"column":11},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":23}},{"generated":{"line":385,"column":13},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":25}},{"name":"Vector2","generated":{"line":385,"column":17},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":29}},{"generated":{"line":385,"column":31},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":25}},{"generated":{"line":385,"column":32},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":38}},{"generated":{"line":385,"column":36},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":42}},{"generated":{"line":385,"column":40},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":25}},{"generated":{"line":385,"column":42},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":48}},{"generated":{"line":385,"column":46},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":52}},{"generated":{"line":385,"column":49},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":25}},{"generated":{"line":386,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":376,"column":16}},{"generated":{"line":387,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":372,"column":11}},{"generated":{"line":387,"column":3},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":370,"column":24}},{"name":"vertexShader","generated":{"line":388,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":380,"column":1}},{"name":"vertexShader","generated":{"line":388,"column":2},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":380,"column":1}},{"generated":{"line":388,"column":14},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":380,"column":13}},{"generated":{"line":389,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":380,"column":15}},{"generated":{"line":390,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":380,"column":26}},{"generated":{"line":391,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":381,"column":0}},{"generated":{"line":392,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":382,"column":0}},{"generated":{"line":393,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":383,"column":0}},{"generated":{"line":394,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":384,"column":0}},{"generated":{"line":395,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":385,"column":0}},{"generated":{"line":396,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":386,"column":0}},{"generated":{"line":397,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":387,"column":0}},{"generated":{"line":398,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":388,"column":0}},{"generated":{"line":399,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":389,"column":0}},{"generated":{"line":400,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":390,"column":0}},{"generated":{"line":401,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":391,"column":0}},{"generated":{"line":402,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":392,"column":0}},{"generated":{"line":403,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":393,"column":0}},{"generated":{"line":404,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":394,"column":0}},{"generated":{"line":405,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":395,"column":0}},{"generated":{"line":406,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":396,"column":0}},{"generated":{"line":407,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":397,"column":0}},{"generated":{"line":408,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":398,"column":0}},{"generated":{"line":409,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":399,"column":0}},{"generated":{"line":410,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":400,"column":0}},{"generated":{"line":410,"column":4},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":370,"column":24}},{"name":"fragmentShader","generated":{"line":411,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":402,"column":1}},{"name":"fragmentShader","generated":{"line":411,"column":2},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":402,"column":1}},{"generated":{"line":411,"column":16},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":402,"column":15}},{"generated":{"line":412,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":402,"column":17}},{"generated":{"line":413,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":402,"column":28}},{"generated":{"line":414,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":403,"column":0}},{"generated":{"line":415,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":404,"column":0}},{"generated":{"line":416,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":405,"column":0}},{"generated":{"line":417,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":406,"column":0}},{"generated":{"line":418,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":407,"column":0}},{"generated":{"line":419,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":408,"column":0}},{"generated":{"line":420,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":409,"column":0}},{"generated":{"line":421,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":410,"column":0}},{"generated":{"line":422,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":411,"column":0}},{"generated":{"line":423,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":412,"column":0}},{"generated":{"line":424,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":413,"column":0}},{"generated":{"line":425,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":414,"column":0}},{"generated":{"line":426,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":415,"column":0}},{"generated":{"line":427,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":416,"column":0}},{"generated":{"line":428,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":417,"column":0}},{"generated":{"line":429,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":418,"column":0}},{"generated":{"line":430,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":419,"column":0}},{"generated":{"line":431,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":420,"column":0}},{"generated":{"line":432,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":421,"column":0}},{"generated":{"line":433,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":422,"column":0}},{"generated":{"line":434,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":423,"column":0}},{"generated":{"line":435,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":424,"column":0}},{"generated":{"line":436,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":425,"column":0}},{"generated":{"line":437,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":426,"column":0}},{"generated":{"line":438,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":427,"column":0}},{"generated":{"line":439,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":428,"column":0}},{"generated":{"line":440,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":429,"column":0}},{"generated":{"line":441,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":430,"column":0}},{"generated":{"line":442,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":431,"column":0}},{"generated":{"line":443,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":432,"column":0}},{"generated":{"line":444,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":433,"column":0}},{"generated":{"line":445,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":434,"column":0}},{"generated":{"line":446,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":435,"column":0}},{"generated":{"line":447,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":436,"column":0}},{"generated":{"line":448,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":437,"column":0}},{"generated":{"line":449,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":438,"column":0}},{"generated":{"line":450,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":439,"column":0}},{"generated":{"line":451,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":440,"column":0}},{"generated":{"line":452,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":441,"column":0}},{"generated":{"line":453,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":442,"column":0}},{"generated":{"line":454,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":443,"column":0}},{"generated":{"line":455,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":444,"column":0}},{"generated":{"line":456,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":445,"column":0}},{"generated":{"line":457,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":446,"column":0}},{"generated":{"line":458,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":447,"column":0}},{"generated":{"line":459,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":448,"column":0}},{"generated":{"line":460,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":449,"column":0}},{"generated":{"line":461,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":450,"column":0}},{"generated":{"line":462,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":451,"column":0}},{"generated":{"line":463,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":452,"column":0}},{"generated":{"line":464,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":453,"column":0}},{"generated":{"line":465,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":454,"column":0}},{"generated":{"line":466,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":455,"column":0}},{"generated":{"line":467,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":456,"column":0}},{"generated":{"line":468,"column":0},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":370,"column":24}},{"generated":{"line":468,"column":1},"source":"../node_modules/three/examples/jsm/shaders/SMAAShader.js","original":{"line":370,"column":0}}],"sources":{"../node_modules/three/examples/jsm/shaders/SMAAShader.js":"import {\n\tVector2\n} from 'three';\n\n/**\n * WebGL port of Subpixel Morphological Antialiasing (SMAA) v2.8\n * Preset: SMAA 1x Medium (with color edge detection)\n * https://github.com/iryoku/smaa/releases/tag/v2.8\n */\n\nconst SMAAEdgesShader = {\n\n\tdefines: {\n\n\t\t'SMAA_THRESHOLD': '0.1'\n\n\t},\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'resolution': { value: new Vector2( 1 / 1024, 1 / 512 ) }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tuniform vec2 resolution;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vOffset[ 3 ];\n\n\t\tvoid SMAAEdgeDetectionVS( vec2 texcoord ) {\n\t\t\tvOffset[ 0 ] = texcoord.xyxy + resolution.xyxy * vec4( -1.0, 0.0, 0.0,  1.0 ); // WebGL port note: Changed sign in W component\n\t\t\tvOffset[ 1 ] = texcoord.xyxy + resolution.xyxy * vec4(  1.0, 0.0, 0.0, -1.0 ); // WebGL port note: Changed sign in W component\n\t\t\tvOffset[ 2 ] = texcoord.xyxy + resolution.xyxy * vec4( -2.0, 0.0, 0.0,  2.0 ); // WebGL port note: Changed sign in W component\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tSMAAEdgeDetectionVS( vUv );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vOffset[ 3 ];\n\n\t\tvec4 SMAAColorEdgeDetectionPS( vec2 texcoord, vec4 offset[3], sampler2D colorTex ) {\n\t\t\tvec2 threshold = vec2( SMAA_THRESHOLD, SMAA_THRESHOLD );\n\n\t\t\t// Calculate color deltas:\n\t\t\tvec4 delta;\n\t\t\tvec3 C = texture2D( colorTex, texcoord ).rgb;\n\n\t\t\tvec3 Cleft = texture2D( colorTex, offset[0].xy ).rgb;\n\t\t\tvec3 t = abs( C - Cleft );\n\t\t\tdelta.x = max( max( t.r, t.g ), t.b );\n\n\t\t\tvec3 Ctop = texture2D( colorTex, offset[0].zw ).rgb;\n\t\t\tt = abs( C - Ctop );\n\t\t\tdelta.y = max( max( t.r, t.g ), t.b );\n\n\t\t\t// We do the usual threshold:\n\t\t\tvec2 edges = step( threshold, delta.xy );\n\n\t\t\t// Then discard if there is no edge:\n\t\t\tif ( dot( edges, vec2( 1.0, 1.0 ) ) == 0.0 )\n\t\t\t\tdiscard;\n\n\t\t\t// Calculate right and bottom deltas:\n\t\t\tvec3 Cright = texture2D( colorTex, offset[1].xy ).rgb;\n\t\t\tt = abs( C - Cright );\n\t\t\tdelta.z = max( max( t.r, t.g ), t.b );\n\n\t\t\tvec3 Cbottom  = texture2D( colorTex, offset[1].zw ).rgb;\n\t\t\tt = abs( C - Cbottom );\n\t\t\tdelta.w = max( max( t.r, t.g ), t.b );\n\n\t\t\t// Calculate the maximum delta in the direct neighborhood:\n\t\t\tfloat maxDelta = max( max( max( delta.x, delta.y ), delta.z ), delta.w );\n\n\t\t\t// Calculate left-left and top-top deltas:\n\t\t\tvec3 Cleftleft  = texture2D( colorTex, offset[2].xy ).rgb;\n\t\t\tt = abs( C - Cleftleft );\n\t\t\tdelta.z = max( max( t.r, t.g ), t.b );\n\n\t\t\tvec3 Ctoptop = texture2D( colorTex, offset[2].zw ).rgb;\n\t\t\tt = abs( C - Ctoptop );\n\t\t\tdelta.w = max( max( t.r, t.g ), t.b );\n\n\t\t\t// Calculate the final maximum delta:\n\t\t\tmaxDelta = max( max( maxDelta, delta.z ), delta.w );\n\n\t\t\t// Local contrast adaptation in action:\n\t\t\tedges.xy *= step( 0.5 * maxDelta, delta.xy );\n\n\t\t\treturn vec4( edges, 0.0, 0.0 );\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = SMAAColorEdgeDetectionPS( vUv, vOffset, tDiffuse );\n\n\t\t}`\n\n};\n\nconst SMAAWeightsShader = {\n\n\tdefines: {\n\n\t\t'SMAA_MAX_SEARCH_STEPS': '8',\n\t\t'SMAA_AREATEX_MAX_DISTANCE': '16',\n\t\t'SMAA_AREATEX_PIXEL_SIZE': '( 1.0 / vec2( 160.0, 560.0 ) )',\n\t\t'SMAA_AREATEX_SUBTEX_SIZE': '( 1.0 / 7.0 )'\n\n\t},\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'tArea': { value: null },\n\t\t'tSearch': { value: null },\n\t\t'resolution': { value: new Vector2( 1 / 1024, 1 / 512 ) }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tuniform vec2 resolution;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vOffset[ 3 ];\n\t\tvarying vec2 vPixcoord;\n\n\t\tvoid SMAABlendingWeightCalculationVS( vec2 texcoord ) {\n\t\t\tvPixcoord = texcoord / resolution;\n\n\t\t\t// We will use these offsets for the searches later on (see @PSEUDO_GATHER4):\n\t\t\tvOffset[ 0 ] = texcoord.xyxy + resolution.xyxy * vec4( -0.25, 0.125, 1.25, 0.125 ); // WebGL port note: Changed sign in Y and W components\n\t\t\tvOffset[ 1 ] = texcoord.xyxy + resolution.xyxy * vec4( -0.125, 0.25, -0.125, -1.25 ); // WebGL port note: Changed sign in Y and W components\n\n\t\t\t// And these for the searches, they indicate the ends of the loops:\n\t\t\tvOffset[ 2 ] = vec4( vOffset[ 0 ].xz, vOffset[ 1 ].yw ) + vec4( -2.0, 2.0, -2.0, 2.0 ) * resolution.xxyy * float( SMAA_MAX_SEARCH_STEPS );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tSMAABlendingWeightCalculationVS( vUv );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\t#define SMAASampleLevelZeroOffset( tex, coord, offset ) texture2D( tex, coord + float( offset ) * resolution, 0.0 )\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform sampler2D tArea;\n\t\tuniform sampler2D tSearch;\n\t\tuniform vec2 resolution;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vOffset[3];\n\t\tvarying vec2 vPixcoord;\n\n\t\t#if __VERSION__ == 100\n\t\tvec2 round( vec2 x ) {\n\t\t\treturn sign( x ) * floor( abs( x ) + 0.5 );\n\t\t}\n\t\t#endif\n\n\t\tfloat SMAASearchLength( sampler2D searchTex, vec2 e, float bias, float scale ) {\n\t\t\t// Not required if searchTex accesses are set to point:\n\t\t\t// float2 SEARCH_TEX_PIXEL_SIZE = 1.0 / float2(66.0, 33.0);\n\t\t\t// e = float2(bias, 0.0) + 0.5 * SEARCH_TEX_PIXEL_SIZE +\n\t\t\t//     e * float2(scale, 1.0) * float2(64.0, 32.0) * SEARCH_TEX_PIXEL_SIZE;\n\t\t\te.r = bias + e.r * scale;\n\t\t\treturn 255.0 * texture2D( searchTex, e, 0.0 ).r;\n\t\t}\n\n\t\tfloat SMAASearchXLeft( sampler2D edgesTex, sampler2D searchTex, vec2 texcoord, float end ) {\n\t\t\t/**\n\t\t\t\t* @PSEUDO_GATHER4\n\t\t\t\t* This texcoord has been offset by (-0.25, -0.125) in the vertex shader to\n\t\t\t\t* sample between edge, thus fetching four edges in a row.\n\t\t\t\t* Sampling with different offsets in each direction allows to disambiguate\n\t\t\t\t* which edges are active from the four fetched ones.\n\t\t\t\t*/\n\t\t\tvec2 e = vec2( 0.0, 1.0 );\n\n\t\t\tfor ( int i = 0; i < SMAA_MAX_SEARCH_STEPS; i ++ ) { // WebGL port note: Changed while to for\n\t\t\t\te = texture2D( edgesTex, texcoord, 0.0 ).rg;\n\t\t\t\ttexcoord -= vec2( 2.0, 0.0 ) * resolution;\n\t\t\t\tif ( ! ( texcoord.x > end && e.g > 0.8281 && e.r == 0.0 ) ) break;\n\t\t\t}\n\n\t\t\t// We correct the previous (-0.25, -0.125) offset we applied:\n\t\t\ttexcoord.x += 0.25 * resolution.x;\n\n\t\t\t// The searches are bias by 1, so adjust the coords accordingly:\n\t\t\ttexcoord.x += resolution.x;\n\n\t\t\t// Disambiguate the length added by the last step:\n\t\t\ttexcoord.x += 2.0 * resolution.x; // Undo last step\n\t\t\ttexcoord.x -= resolution.x * SMAASearchLength(searchTex, e, 0.0, 0.5);\n\n\t\t\treturn texcoord.x;\n\t\t}\n\n\t\tfloat SMAASearchXRight( sampler2D edgesTex, sampler2D searchTex, vec2 texcoord, float end ) {\n\t\t\tvec2 e = vec2( 0.0, 1.0 );\n\n\t\t\tfor ( int i = 0; i < SMAA_MAX_SEARCH_STEPS; i ++ ) { // WebGL port note: Changed while to for\n\t\t\t\te = texture2D( edgesTex, texcoord, 0.0 ).rg;\n\t\t\t\ttexcoord += vec2( 2.0, 0.0 ) * resolution;\n\t\t\t\tif ( ! ( texcoord.x < end && e.g > 0.8281 && e.r == 0.0 ) ) break;\n\t\t\t}\n\n\t\t\ttexcoord.x -= 0.25 * resolution.x;\n\t\t\ttexcoord.x -= resolution.x;\n\t\t\ttexcoord.x -= 2.0 * resolution.x;\n\t\t\ttexcoord.x += resolution.x * SMAASearchLength( searchTex, e, 0.5, 0.5 );\n\n\t\t\treturn texcoord.x;\n\t\t}\n\n\t\tfloat SMAASearchYUp( sampler2D edgesTex, sampler2D searchTex, vec2 texcoord, float end ) {\n\t\t\tvec2 e = vec2( 1.0, 0.0 );\n\n\t\t\tfor ( int i = 0; i < SMAA_MAX_SEARCH_STEPS; i ++ ) { // WebGL port note: Changed while to for\n\t\t\t\te = texture2D( edgesTex, texcoord, 0.0 ).rg;\n\t\t\t\ttexcoord += vec2( 0.0, 2.0 ) * resolution; // WebGL port note: Changed sign\n\t\t\t\tif ( ! ( texcoord.y > end && e.r > 0.8281 && e.g == 0.0 ) ) break;\n\t\t\t}\n\n\t\t\ttexcoord.y -= 0.25 * resolution.y; // WebGL port note: Changed sign\n\t\t\ttexcoord.y -= resolution.y; // WebGL port note: Changed sign\n\t\t\ttexcoord.y -= 2.0 * resolution.y; // WebGL port note: Changed sign\n\t\t\ttexcoord.y += resolution.y * SMAASearchLength( searchTex, e.gr, 0.0, 0.5 ); // WebGL port note: Changed sign\n\n\t\t\treturn texcoord.y;\n\t\t}\n\n\t\tfloat SMAASearchYDown( sampler2D edgesTex, sampler2D searchTex, vec2 texcoord, float end ) {\n\t\t\tvec2 e = vec2( 1.0, 0.0 );\n\n\t\t\tfor ( int i = 0; i < SMAA_MAX_SEARCH_STEPS; i ++ ) { // WebGL port note: Changed while to for\n\t\t\t\te = texture2D( edgesTex, texcoord, 0.0 ).rg;\n\t\t\t\ttexcoord -= vec2( 0.0, 2.0 ) * resolution; // WebGL port note: Changed sign\n\t\t\t\tif ( ! ( texcoord.y < end && e.r > 0.8281 && e.g == 0.0 ) ) break;\n\t\t\t}\n\n\t\t\ttexcoord.y += 0.25 * resolution.y; // WebGL port note: Changed sign\n\t\t\ttexcoord.y += resolution.y; // WebGL port note: Changed sign\n\t\t\ttexcoord.y += 2.0 * resolution.y; // WebGL port note: Changed sign\n\t\t\ttexcoord.y -= resolution.y * SMAASearchLength( searchTex, e.gr, 0.5, 0.5 ); // WebGL port note: Changed sign\n\n\t\t\treturn texcoord.y;\n\t\t}\n\n\t\tvec2 SMAAArea( sampler2D areaTex, vec2 dist, float e1, float e2, float offset ) {\n\t\t\t// Rounding prevents precision errors of bilinear filtering:\n\t\t\tvec2 texcoord = float( SMAA_AREATEX_MAX_DISTANCE ) * round( 4.0 * vec2( e1, e2 ) ) + dist;\n\n\t\t\t// We do a scale and bias for mapping to texel space:\n\t\t\ttexcoord = SMAA_AREATEX_PIXEL_SIZE * texcoord + ( 0.5 * SMAA_AREATEX_PIXEL_SIZE );\n\n\t\t\t// Move to proper place, according to the subpixel offset:\n\t\t\ttexcoord.y += SMAA_AREATEX_SUBTEX_SIZE * offset;\n\n\t\t\treturn texture2D( areaTex, texcoord, 0.0 ).rg;\n\t\t}\n\n\t\tvec4 SMAABlendingWeightCalculationPS( vec2 texcoord, vec2 pixcoord, vec4 offset[ 3 ], sampler2D edgesTex, sampler2D areaTex, sampler2D searchTex, ivec4 subsampleIndices ) {\n\t\t\tvec4 weights = vec4( 0.0, 0.0, 0.0, 0.0 );\n\n\t\t\tvec2 e = texture2D( edgesTex, texcoord ).rg;\n\n\t\t\tif ( e.g > 0.0 ) { // Edge at north\n\t\t\t\tvec2 d;\n\n\t\t\t\t// Find the distance to the left:\n\t\t\t\tvec2 coords;\n\t\t\t\tcoords.x = SMAASearchXLeft( edgesTex, searchTex, offset[ 0 ].xy, offset[ 2 ].x );\n\t\t\t\tcoords.y = offset[ 1 ].y; // offset[1].y = texcoord.y - 0.25 * resolution.y (@CROSSING_OFFSET)\n\t\t\t\td.x = coords.x;\n\n\t\t\t\t// Now fetch the left crossing edges, two at a time using bilinear\n\t\t\t\t// filtering. Sampling at -0.25 (see @CROSSING_OFFSET) enables to\n\t\t\t\t// discern what value each edge has:\n\t\t\t\tfloat e1 = texture2D( edgesTex, coords, 0.0 ).r;\n\n\t\t\t\t// Find the distance to the right:\n\t\t\t\tcoords.x = SMAASearchXRight( edgesTex, searchTex, offset[ 0 ].zw, offset[ 2 ].y );\n\t\t\t\td.y = coords.x;\n\n\t\t\t\t// We want the distances to be in pixel units (doing this here allow to\n\t\t\t\t// better interleave arithmetic and memory accesses):\n\t\t\t\td = d / resolution.x - pixcoord.x;\n\n\t\t\t\t// SMAAArea below needs a sqrt, as the areas texture is compressed\n\t\t\t\t// quadratically:\n\t\t\t\tvec2 sqrt_d = sqrt( abs( d ) );\n\n\t\t\t\t// Fetch the right crossing edges:\n\t\t\t\tcoords.y -= 1.0 * resolution.y; // WebGL port note: Added\n\t\t\t\tfloat e2 = SMAASampleLevelZeroOffset( edgesTex, coords, ivec2( 1, 0 ) ).r;\n\n\t\t\t\t// Ok, we know how this pattern looks like, now it is time for getting\n\t\t\t\t// the actual area:\n\t\t\t\tweights.rg = SMAAArea( areaTex, sqrt_d, e1, e2, float( subsampleIndices.y ) );\n\t\t\t}\n\n\t\t\tif ( e.r > 0.0 ) { // Edge at west\n\t\t\t\tvec2 d;\n\n\t\t\t\t// Find the distance to the top:\n\t\t\t\tvec2 coords;\n\n\t\t\t\tcoords.y = SMAASearchYUp( edgesTex, searchTex, offset[ 1 ].xy, offset[ 2 ].z );\n\t\t\t\tcoords.x = offset[ 0 ].x; // offset[1].x = texcoord.x - 0.25 * resolution.x;\n\t\t\t\td.x = coords.y;\n\n\t\t\t\t// Fetch the top crossing edges:\n\t\t\t\tfloat e1 = texture2D( edgesTex, coords, 0.0 ).g;\n\n\t\t\t\t// Find the distance to the bottom:\n\t\t\t\tcoords.y = SMAASearchYDown( edgesTex, searchTex, offset[ 1 ].zw, offset[ 2 ].w );\n\t\t\t\td.y = coords.y;\n\n\t\t\t\t// We want the distances to be in pixel units:\n\t\t\t\td = d / resolution.y - pixcoord.y;\n\n\t\t\t\t// SMAAArea below needs a sqrt, as the areas texture is compressed\n\t\t\t\t// quadratically:\n\t\t\t\tvec2 sqrt_d = sqrt( abs( d ) );\n\n\t\t\t\t// Fetch the bottom crossing edges:\n\t\t\t\tcoords.y -= 1.0 * resolution.y; // WebGL port note: Added\n\t\t\t\tfloat e2 = SMAASampleLevelZeroOffset( edgesTex, coords, ivec2( 0, 1 ) ).g;\n\n\t\t\t\t// Get the area for this direction:\n\t\t\t\tweights.ba = SMAAArea( areaTex, sqrt_d, e1, e2, float( subsampleIndices.x ) );\n\t\t\t}\n\n\t\t\treturn weights;\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = SMAABlendingWeightCalculationPS( vUv, vPixcoord, vOffset, tDiffuse, tArea, tSearch, ivec4( 0.0 ) );\n\n\t\t}`\n\n};\n\nconst SMAABlendShader = {\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'tColor': { value: null },\n\t\t'resolution': { value: new Vector2( 1 / 1024, 1 / 512 ) }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tuniform vec2 resolution;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vOffset[ 2 ];\n\n\t\tvoid SMAANeighborhoodBlendingVS( vec2 texcoord ) {\n\t\t\tvOffset[ 0 ] = texcoord.xyxy + resolution.xyxy * vec4( -1.0, 0.0, 0.0, 1.0 ); // WebGL port note: Changed sign in W component\n\t\t\tvOffset[ 1 ] = texcoord.xyxy + resolution.xyxy * vec4( 1.0, 0.0, 0.0, -1.0 ); // WebGL port note: Changed sign in W component\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tSMAANeighborhoodBlendingVS( vUv );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform sampler2D tColor;\n\t\tuniform vec2 resolution;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vOffset[ 2 ];\n\n\t\tvec4 SMAANeighborhoodBlendingPS( vec2 texcoord, vec4 offset[ 2 ], sampler2D colorTex, sampler2D blendTex ) {\n\t\t\t// Fetch the blending weights for current pixel:\n\t\t\tvec4 a;\n\t\t\ta.xz = texture2D( blendTex, texcoord ).xz;\n\t\t\ta.y = texture2D( blendTex, offset[ 1 ].zw ).g;\n\t\t\ta.w = texture2D( blendTex, offset[ 1 ].xy ).a;\n\n\t\t\t// Is there any blending weight with a value greater than 0.0?\n\t\t\tif ( dot(a, vec4( 1.0, 1.0, 1.0, 1.0 )) < 1e-5 ) {\n\t\t\t\treturn texture2D( colorTex, texcoord, 0.0 );\n\t\t\t} else {\n\t\t\t\t// Up to 4 lines can be crossing a pixel (one through each edge). We\n\t\t\t\t// favor blending by choosing the line with the maximum weight for each\n\t\t\t\t// direction:\n\t\t\t\tvec2 offset;\n\t\t\t\toffset.x = a.a > a.b ? a.a : -a.b; // left vs. right\n\t\t\t\toffset.y = a.g > a.r ? -a.g : a.r; // top vs. bottom // WebGL port note: Changed signs\n\n\t\t\t\t// Then we go in the direction that has the maximum weight:\n\t\t\t\tif ( abs( offset.x ) > abs( offset.y )) { // horizontal vs. vertical\n\t\t\t\t\toffset.y = 0.0;\n\t\t\t\t} else {\n\t\t\t\t\toffset.x = 0.0;\n\t\t\t\t}\n\n\t\t\t\t// Fetch the opposite color and lerp by hand:\n\t\t\t\tvec4 C = texture2D( colorTex, texcoord, 0.0 );\n\t\t\t\ttexcoord += sign( offset ) * resolution;\n\t\t\t\tvec4 Cop = texture2D( colorTex, texcoord, 0.0 );\n\t\t\t\tfloat s = abs( offset.x ) > abs( offset.y ) ? abs( offset.x ) : abs( offset.y );\n\n\t\t\t\t// WebGL port note: Added gamma correction\n\t\t\t\tC.xyz = pow(C.xyz, vec3(2.2));\n\t\t\t\tCop.xyz = pow(Cop.xyz, vec3(2.2));\n\t\t\t\tvec4 mixed = mix(C, Cop, s);\n\t\t\t\tmixed.xyz = pow(mixed.xyz, vec3(1.0 / 2.2));\n\n\t\t\t\treturn mixed;\n\t\t\t}\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = SMAANeighborhoodBlendingPS( vUv, vOffset, tColor, tDiffuse );\n\n\t\t}`\n\n};\n\nexport { SMAAEdgesShader, SMAAWeightsShader, SMAABlendShader };\n"},"lineCount":null}},"error":null,"hash":"418711e712daaeb674bd3041101d059a","cacheData":{"env":{}}}